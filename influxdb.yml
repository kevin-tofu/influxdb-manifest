apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: influxdb
  name: influxdb-pvc
  namespace: timeseries
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: timeseries
  name: influxdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      containers:
      # - image: docker.io/influxdb:1.6.4
      - image: influxdb
        imagePullPolicy: IfNotPresent
        name: influxdb
        envFrom:
        - secretRef:
            name: influxdb-env
        ports:
        - containerPort: 8086
        volumeMounts:
        - mountPath: /var/lib/influxdb
          name: var-lib-influxdb
          
      volumes:
      - name: var-lib-influxdb
        persistentVolumeClaim:
          claimName: influxdb-pvc
---
apiVersion: v1  
kind: Service  
metadata:  
  name: influxdb
  namespace: timeseries
spec:  
  selector:  
    app: influxdb  
  ports:  
    - protocol: TCP  
      port: 80
      targetPort: 8086
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: influx
  namespace: timeseries
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # cert-manager.io/cluster-issuer: "letsencrypt-issuer"
spec:
  tls:
    - hosts:
      - XXXX.com
      secretName: secret-influx
  rules:
  - host: XXXX.com
    http:
      paths:
      - path: /
        backend:
          serviceName: influxdb
          servicePort: 80
